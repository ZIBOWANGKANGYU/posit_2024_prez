---
title: "GitHub Copilot in R Shiny Development"
subtitle: "Create beautiful interactive slide decks with Reveal.js"
format:
  revealjs: 
    code-line-numbers: true
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    logo: images/quarto.png
    css: styles.css
    footer: <https://zibowangkangyu.github.io/>
---

```{r}
#| label: load-packages
#| include: false

library(fs)
library(flair)
library(magrittr)
library(dplyr)
```

## Is this a Shiny app?

PUT IN app_1: will host on shinyapps.io

## Is this a Shiny app???

PUT IN external app: will host on shinyapps.io

## GitHub Copilot

ADD basic information about copilot (how it is different from chattr) and its productivity boost

## Shiny is a pain if ...

- UI / front-end tasks
- Routine / tedious tasks

## Interacting with Copilot

Zeroth / simple example: focus on using Copilot with rstudio

:::: {.columns}

::: {.column width="40%"}
Prerequisites 

- A GitHub account

- A Copilot subscription

:::

::: {.column width="20%"}
:::

::: {.column width="40%"}
Supported platforms

- RStudio IDE

- Positron? use `chattr` package

:::

::::

## 

Video: enabling Copilot in RStudio IDE

## First try with Copilot {auto-animate="true"}

``` {.r}
# Create a beautiful UI for a desk booking app that matches the overall theme of my company's websites. 
```

## First try with Copilot {auto-animate="true"}

``` {.r code-line-numbers="1|3-18"}
# Create a beautiful UI for a desk booking app that matches the overall theme of my company's websites. 

ui <- fluidPage(
  titlePanel("Desk Booking App"),
  sidebarLayout(
    sidebarPanel(
      h3("Welcome to the Desk Booking App!"),
      h4("Please select the date and time you would like to book a desk."),
      dateInput("date", "Select a date:", value = Sys.Date()),
      selectInput("time", "Select a time:", choices = c("9:00 AM", "10:00 AM", "11:00 AM", "12:00 PM", "1:00 PM", "2:00 PM", "3:00 PM", "4:00 PM", "5:00 PM")),
      actionButton("book", "Book Desk")
    ),
    mainPanel(
      h3("Desk Booking Confirmation"),
      textOutput("confirmation")
    )
  )
)
```

## Set the context

First example: UI re-production

- Context as code

```{r}
dir_tree("../ui_reproduction")
```

## Set the context

- Current active tab

- Opened tabs

- Index project files

## Set the context

``` {.html code-line-numbers="|8|9"}

<!doctype html>
<html lang="en" class="no-js">
...
</html>

<!-- 
# Above is the index.html file. The file is a template for a website's homepage.
# Re-create the homepage, but with R Shiny.
-->
```

## Know your project 

"No completions available"???

- Personal information 

- Bias concerns

- If not sure, ask Copilot!

```{.r code-line-numbers="1,4"}
# Please don't provide code but give answer in English. 
# Above is the HTML code for a website's homepage. Does it contain any personal or sensitive information?

# Answer

```

## Refer to specific knowledge

- chattr package use these simple references

```{.r}
    "Use the 'Tidy Modeling with R' (https://www.tmwr.org/) book as main reference",
    "Use the 'R for Data Science' (https://r4ds.had.co.nz/) book as main reference",
    "Use tidyverse packages: readr, ggplot2, dplyr, tidyr",
    "For models, use tidymodels packages: recipes, parsnip, yardstick, workflows, broom",
    "Avoid explanations unless requested by user, expecting code only"
```

```{.r}
# Refer here: https://shiny.posit.co/r/articles/build/html-tags/
# for more information on how to convert HTML to Shiny.
```

## Writing prompts 

- What is a prompt? (difference between a prompt and context) for users of genAI.

## Writing prompts

- Single

```{.r} 

# Create UI for a beautiful desk booking application using an interactive calendar. The UI should allow users to select a date and time to book a desk. It should show a calendar with information about all booked desks. 

```

## Writing prmopts {auto-animate="true"}

- Single
Break down big task into smaller steps

```{.r code-line-numbers="2|3|4"}

# Create simple sidebar UI using bslib package. 
# Change the UI above. Put date and desk selection dropdown menus in the sidebar.
# Put a calendar in the main panel.
# ...
```

## Writing prompts 

- Specific 
Know the package / function you want to use
If not sure, ask Copilot

```{.r code-line-numbers="1"}
# Please don't provide code but give answer in English. 
# What packages in R provide advanced functionality for creating interactive calendars?

# Anwer: shinyWidgets, shinyCal, shinyCalender, shinyCalenderPlus

```

## Writing prompts

- Short

```{.r code-line-numbers=""}
# I really want users to be able to create new events in the calendar. 
# The user should be able to click or drag on dates, and then a pop-up window should appear to let users put in event details. 
# Once events have been created, they should appear on the calendar. 
# The suggestions I have got so far do not allow users to create new events. In other words, they are not interactive. 
# I need a package that creates INTERACTIVE calendars. 
# Which package in R should I use?
```

- Find other help

## Writing prompts 

- Specific 

```{.r code-line-numbers="1"}
# Create a calendar input using the toastui package in the main panel
```

## Iteration 

Third example: Shiny testing

- Unit tests
- Server tests
- Browser tests


## Iteration 

- Documentation first 

```{.r}
create_stock_table <- function(data) {
  stock_data_wide <- data %>% spread(symbol, close) %>%
    mutate(date = as.character(date))
  stock_data_wide
}

# Create documentation for the function create_stock_table above:
```

## Iteration 

- Documentation first 

```{.r}
#' Create a stock table
#' 
#' This function creates a stock table from a data frame.
#' 
#' @param data A data frame with stock data
#' @return A data frame with stock data in wide format
#' 
create_stock_table <- function(data) {
  stock_data_wide <- data %>% spread(symbol, close) %>%
    mutate(date = as.character(date))
  stock_data_wide
}

# Now, write unit tests for the function create_stock_table. 
# Use the testthat package and write the tests. 
# Refererence here: https://testthat.r-lib.org/
```

## Iteration

- Start with the first few words that you think Copilot should generate

```{.r}
# ...
# Now, write unit tests for the function create_stock_table. 
# Use the testthat package and write the tests. 
# Refererence here: https://testthat.r-lib.org/

# Test 1: 
```

## Iteration

- Start with the first few words that you think Copilot should generate

```{.r}
# ...
# Now, write unit tests for the function create_stock_table. 
# Use the testthat package and write the tests. 
# Refererence here: https://testthat.r-lib.org/

# Test 1: 
```

## Iteration

- Start with the first few words that you think Copilot should generate

```{.r}
# ...
# Now, write unit tests for the function create_stock_table. 
# Use the testthat package and write the tests. 
# Refererence here: https://testthat.r-lib.org/

# Test 1: Test if the function returns a data frame
test_that("create_stock_table returns a data frame", {
  data <- data.frame(date = c("2020-01-01", "2020-01-02"),
                     symbol = c("AAPL", "AAPL"),
                     close = c(100, 101))
  expect_is(create_stock_table(data), "data.frame")
})
```

## Iteration

- Start with examples

```{.r}
# Create server tests for the `server` function. 
# Refer to the explanations here regarding how to create server tests: https://mastering-shiny.org/scaling-testing.html#testing-reactivity

# For example, below is code for server:
# server <- function(input, output, session) {
#   xy <- reactive(input$x - input$y)
#   yz <- reactive(input$z + input$y)
#   xyz <- reactive(xy() * yz())
#   output$out <- renderText(paste0("Result: ", xyz()))
# }
# 
# We can write tests for the reactivity of the server function. 
# 
# test_that("reactives and output updates", {
#   testServer(server, {
#     session$setInputs(x = 1, y = 1, z = 1)
#     expect_equal(xy(), 0)
#     expect_equal(yz(), 2)
#     expect_equal(output$out, "Result: 0")
#   })
# })

# Now, create server tests for the server function below
```

## Iteration

- Let Copilot know what you want to test 

```{.r}
# Test that the reactive expression stock_table_rv() returns the correct value
```

## Iteration

- Modifying dynamic data to work in browser tests

```{.r}
"<table  class = 'table shiny-table table- spacing-s' style = 'width:auto;'>\n<thead> <tr> <th style='text-align: left;'> date </th> <th style='text-align: right;'> AAPL </th> <th style='text-align: right;'> GOOGL </th>  </tr> </thead> <tbody>\n  <tr> <td> 19844.00 </td> <td align=\"right\"> 169.30 </td> <td align=\"right\"> 163.86 </td> </tr>\n  <tr> <td> 19845.00 </td> <td align=\"right\"> 173.03 </td> <td align=\"right\"> 166.62 </td> </tr>\n  <tr> <td> 19846.00 </td> <td align=\"right\"> 183.38 </td> <td align=\"right\"> 167.24 </td> </tr>\n  <tr> <td> 19849.00 </td> <td align=\"right\"> 181.71 </td> <td align=\"right\"> 168.10 </td> </tr>\n  <tr> <td> 19850.00 </td> <td align=\"right\"> 182.40 </td> <td align=\"right\"> 171.25 </td> </tr>\n  <tr> <td> 19851.00 </td> <td align=\"right\"> 182.74 </td> <td align=\"right\"> 169.38 </td> </tr>\n  <tr> <td> 19852.00 </td> <td align=\"right\"> 184.57 </td> <td align=\"right\"> 169.96 </td> </tr>\n  <tr> <td> 19853.00 </td> <td align=\"right\"> 183.05 </td> <td align=\"right\"> 168.65 </td> </tr>\n  <tr> <td> 19856.00 </td> <td align=\"right\"> 186.28 </td> <td align=\"right\"> 169.14 </td> </tr>\n  <tr> <td> 19857.00 </td> <td align=\"right\"> 187.43 </td> <td align=\"right\"> 170.34 </td> </tr>\n  <tr> <td> 19858.00 </td> <td align=\"right\"> 189.72 </td> <td align=\"right\"> 172.51 </td> </tr>\n  <tr> <td> 19859.00 </td> <td align=\"right\"> 189.84 </td> <td align=\"right\"> 174.18 </td> </tr>\n  <tr> <td> 19860.00 </td> <td align=\"right\"> 189.87 </td> <td align=\"right\"> 176.06 </td> </tr>\n  <tr> <td> 19863.00 </td> <td align=\"right\"> 191.04 </td> <td align=\"right\"> 176.92 </td> </tr>\n  <tr> <td> 19864.00 </td> <td align=\"right\"> 192.35 </td> <td align=\"right\"> 177.85 </td> </tr>\n  <tr> <td> 19865.00 </td> <td align=\"right\"> 190.90 </td> <td align=\"right\"> 176.38 </td> </tr>\n  <tr> <td> 19866.00 </td> <td align=\"right\"> 186.88 </td> <td align=\"right\"> 173.55 </td> </tr>\n  <tr> <td> 19867.00 </td> <td align=\"right\"> 189.98 </td> <td align=\"right\"> 174.99 </td> </tr>\n  <tr> <td> 19871.00 </td> <td align=\"right\"> 189.99 </td> <td align=\"right\"> 176.40 </td> </tr>\n  <tr> <td> 19872.00 </td> <td align=\"right\"> 190.29 </td> <td align=\"right\"> 175.90 </td> </tr>\n  <tr> <td> 19873.00 </td> <td align=\"right\"> 191.29 </td> <td align=\"right\"> 172.11 </td> </tr>\n  <tr> <td> 19874.00 </td> <td align=\"right\"> 192.25 </td> <td align=\"right\"> 172.50 </td> </tr>\n  <tr> <td> 19877.00 </td> <td align=\"right\"> 194.03 </td> <td align=\"right\"> 173.17 </td> </tr>\n  <tr> <td> 19878.00 </td> <td align=\"right\"> 194.35 </td> <td align=\"right\"> 173.79 </td> </tr>\n  <tr> <td> 19879.00 </td> <td align=\"right\"> 195.87 </td> <td align=\"right\"> 175.41 </td> </tr>\n  <tr> <td> 19880.00 </td> <td align=\"right\"> 194.48 </td> <td align=\"right\"> 176.73 </td> </tr>\n  <tr> <td> 19881.00 </td> <td align=\"right\"> 196.89 </td> <td align=\"right\"> 174.46 </td> </tr>\n  <tr> <td> 19884.00 </td> <td align=\"right\"> 193.12 </td> <td align=\"right\"> 175.01 </td> </tr>\n  <tr> <td> 19885.00 </td> <td align=\"right\"> 207.15 </td> <td align=\"right\"> 176.62 </td> </tr>\n  <tr> <td> 19886.00 </td> <td align=\"right\"> 213.07 </td> <td align=\"right\"> 177.79 </td> </tr>\n  <tr> <td> 19887.00 </td> <td align=\"right\"> 214.24 </td> <td align=\"right\"> 175.16 </td> </tr>\n  <tr> <td> 19888.00 </td> <td align=\"right\"> 212.49 </td> <td align=\"right\"> 176.79 </td> </tr>\n  <tr> <td> 19891.00 </td> <td align=\"right\"> 216.67 </td> <td align=\"right\"> 177.24 </td> </tr>\n  <tr> <td> 19892.00 </td> <td align=\"right\"> 214.29 </td> <td align=\"right\"> 175.09 </td> </tr>\n  <tr> <td> 19894.00 </td> <td align=\"right\"> 209.68 </td> <td align=\"right\"> 176.30 </td> </tr>\n  <tr> <td> 19895.00 </td> <td align=\"right\"> 207.49 </td> <td align=\"right\"> 179.63 </td> </tr>\n  <tr> <td> 19898.00 </td> <td align=\"right\"> 208.14 </td> <td align=\"right\"> 179.22 </td> </tr>\n  <tr> <td> 19899.00 </td> <td align=\"right\"> 209.07 </td> <td align=\"right\"> 184.03 </td> </tr>\n  <tr> <td> 19900.00 </td> <td align=\"right\"> 213.25 </td> <td align=\"right\"> 183.88 </td> </tr>\n  <tr> <td> 19901.00 </td> <td align=\"right\"> 214.10 </td> <td align=\"right\"> 185.41 </td> </tr>\n  <tr> <td> 19902.00 </td> <td align=\"right\"> 210.62 </td> <td align=\"right\"> 182.15 </td> </tr>\n  <tr> <td> 19905.00 </td> <td align=\"right\"> 216.75 </td> <td align=\"right\"> 182.99 </td> </tr>\n  <tr> <td> 19906.00 </td> <td align=\"right\"> 220.27 </td> <td align=\"right\"> 185.24 </td> </tr>\n  <tr> <td> 19907.00 </td> <td align=\"right\"> 221.55 </td> <td align=\"right\"> 185.82 </td> </tr>\n  <tr> <td> 19909.00 </td> <td align=\"right\"> 226.34 </td> <td align=\"right\"> 190.60 </td> </tr>\n  <tr> <td> 19912.00 </td> <td align=\"right\"> 227.82 </td> <td align=\"right\"> 189.03 </td> </tr>\n  <tr> <td> 19913.00 </td> <td align=\"right\"> 228.68 </td> <td align=\"right\"> 188.98 </td> </tr>\n  <tr> <td> 19914.00 </td> <td align=\"right\"> 232.98 </td> <td align=\"right\"> 191.18 </td> </tr>\n  <tr> <td> 19915.00 </td> <td align=\"right\"> 227.57 </td> <td align=\"right\"> 185.57 </td> </tr>\n  <tr> <td> 19916.00 </td> <td align=\"right\"> 230.54 </td> <td align=\"right\"> 185.07 </td> </tr>\n   </tbody> </table>"
# Above is the expected HTML for the stock_table table. 
# However, the actual data and date of stock prices will change. 
# We need to create a function to transform the HTML into a format that can be compared.
# The function below will remove the date and close price values from the HTML.
# This will allow us to compare the HTML without worrying about the actual values.

transform_html <- function(html) {
 # Remove the date values
 html <- gsub("<td> [0-9]+\\.[0-9]+ </td>", "<td> DATE </td>", html)
 # Remove the close price values
 html <- gsub("<td align=\"right\"> [0-9]+\\.[0-9]+ </td>", "<td align=\"right\"> CLOSE </td>", html)
 return(html)
}
 
  transformed_html <- transform_html(stock_table)
  
 })

```

## Knowledge base 

- External resources

- Namespacing for dynamic UI

```{.r}
# In R Shiny, when UI elements are generated through server code, they are not automatically namespaced. Therefore, we should always add namespace prefixes to the UI elements to avoid conflicts. 

# Refer to the following documentation for more information: https://mastering-shiny.org/scaling-modules.html#dynamic-ui


```

## Knowledge base 

- Internal processes: 
- Security and compliance conventions
- Code and documentation standards
- Deployment process and environment

## Pretty Code {auto-animate="true"}

-   Over 20 syntax highlighting themes available
-   Default theme optimized for accessibility

::: footer
Learn more: [Syntax Highlighting](https://quarto.org/docs/output-formats/html-code.html#highlighting)
:::

## Code Animations {auto-animate="true"}

-   Over 20 syntax highlighting themes available
-   Default theme optimized for accessibility

``` r
# Define a server for the Shiny app
function(input, output) {
  
  # Fill in the spot we created for a plot
  output$phonePlot <- renderPlot({
    # Render a barplot
    barplot(WorldPhones[,input$region]*1000, 
            main=input$region,
            ylab="Number of Telephones",
            xlab="Year")
  })
}
```

::: footer
Learn more: [Code Animations](https://quarto.org/docs/presentations/revealjs/advanced.html#code-animations)
:::

## Line Highlighting

-   Highlight specific lines for emphasis
-   Incrementally highlight additional lines

``` {.python code-line-numbers="4-5|7|10"}
import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(subplot_kw={'projection': 'polar'})
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

::: footer
Learn more: [Line Highlighting](https://quarto.org/docs/presentations/revealjs/#line-highlighting)
:::

## Executable Code

```{r}
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
library(ggplot2)
ggplot(mtcars, aes(hp, mpg, color = am)) +
  geom_point() +
  geom_smooth(formula = y ~ x, method = "loess")
```

::: footer
Learn more: [Executable Code](https://quarto.org/docs/presentations/revealjs/#executable-code)
:::

## LaTeX Equations

[MathJax](https://www.mathjax.org/) rendering of equations to HTML

::: columns
::: {.column width="40%"}
``` tex
\begin{gather*}
a_1=b_1+c_1\\
a_2=b_2+c_2-d_2+e_2
\end{gather*}

\begin{align}
a_{11}& =b_{11}&
  a_{12}& =b_{12}\\
a_{21}& =b_{21}&
  a_{22}& =b_{22}+c_{22}
\end{align}
```
:::

::: {.column width="60%"}
```{=tex}
\begin{gather*}
a_1=b_1+c_1\\
a_2=b_2+c_2-d_2+e_2
\end{gather*}
```
```{=tex}
\begin{align}
a_{11}& =b_{11}&
  a_{12}& =b_{12}\\
a_{21}& =b_{21}&
  a_{22}& =b_{22}+c_{22}
\end{align}
```
:::
:::

::: footer
Learn more: [LaTeX Equations](https://quarto.org/docs/authoring/markdown-basics.html#equations)
:::

## Column Layout {.smaller}

Arrange content into columns of varying widths:

::: columns
::: {.column width="35%"}
#### Motor Trend Car Road Tests

The data was extracted from the 1974 Motor Trend US magazine, and comprises fuel consumption and 10 aspects of automobile design and performance for 32 automobiles.
:::

::: {.column width="3%"}
:::

::: {.column width="62%"}
```{r}
knitr::kable(head(mtcars)[,c("mpg",	"cyl", "disp", "hp", "wt")])
```
:::
:::

::: footer
Learn more: [Multiple Columns](https://quarto.org/docs/presentations/revealjs/#multiple-columns)
:::

## Incremental Lists

Lists can optionally be displayed incrementally:

::: incremental
-   First item
-   Second item
-   Third item
:::

. . .

<br/> Insert pauses to make other types of content display incrementally.

::: footer
Learn more: [Incremental Lists](https://quarto.org/docs/presentations/revealjs/#incremental-lists)
:::

## Fragments

Incremental text display and animation with fragments:

<br/>

::: {.fragment .fade-in}
Fade in
:::

::: {.fragment .fade-up}
Slide up while fading in
:::

::: {.fragment .fade-left}
Slide left while fading in
:::

::: {.fragment .fade-in-then-semi-out}
Fade in then semi out
:::

. . .

::: {.fragment .strike}
Strike
:::

::: {.fragment .highlight-red}
Highlight red
:::

::: footer
Learn more: [Fragments](https://quarto.org/docs/presentations/revealjs/advanced.html#fragments)
:::

## Slide Backgrounds {background="#43464B"}

Set the `background` attribute on a slide to change the background color (all CSS color formats are supported).

Different background transitions are available via the `background-transition` option.

::: footer
Learn more: [Slide Backgrounds](https://quarto.org/docs/presentations/revealjs/#color-backgrounds)
:::

## Media Backgrounds {background="#43464B" background-image="images/milky-way.jpeg"}

You can also use the following as a slide background:

-   An image: `background-image`

-   A video: `background-video`

-   An iframe: `background-iframe`

::: footer
Learn more: [Media Backgrounds](https://quarto.org/docs/presentations/revealjs/#image-backgrounds)
:::

## Absolute Position

Position images or other elements at precise locations

![](mini/images/kitten-400-350.jpeg){.absolute top="170" left="30" width="400" height="400"}

![](mini/images/kitten-450-250.jpeg){.absolute .fragment top="150" right="80" width="450"}

![](mini/images/kitten-300-200.jpeg){.absolute .fragment bottom="110" right="130" width="300"}

::: footer
Learn more: [Absolute Position](https://quarto.org/docs/presentations/revealjs/advanced.html#absolute-position)
:::

## Auto-Animate {auto-animate="true" auto-animate-easing="ease-in-out"}

Automatically animate matching elements across slides with Auto-Animate.

::: r-hstack
::: {data-id="box1" auto-animate-delay="0" style="background: #2780e3; width: 200px; height: 150px; margin: 10px;"}
:::

::: {data-id="box2" auto-animate-delay="0.1" style="background: #3fb618; width: 200px; height: 150px; margin: 10px;"}
:::

::: {data-id="box3" auto-animate-delay="0.2" style="background: #e83e8c; width: 200px; height: 150px; margin: 10px;"}
:::
:::

::: footer
Learn more: [Auto-Animate](https://quarto.org/docs/presentations/revealjs/advanced.html#auto-animate)
:::

## Auto-Animate {auto-animate="true" auto-animate-easing="ease-in-out"}

Automatically animate matching elements across slides with Auto-Animate.

::: r-stack
::: {data-id="box1" style="background: #2780e3; width: 350px; height: 350px; border-radius: 200px;"}
:::

::: {data-id="box2" style="background: #3fb618; width: 250px; height: 250px; border-radius: 200px;"}
:::

::: {data-id="box3" style="background: #e83e8c; width: 150px; height: 150px; border-radius: 200px;"}
:::
:::

::: footer
Learn more: [Auto-Animate](https://quarto.org/docs/presentations/revealjs/advanced.html#auto-animate)
:::

## Slide Transitions {.smaller}

The next few slides will transition using the `slide` transition

| Transition | Description                                                            |
|------------|------------------------------------------------------------------------|
| `none`     | No transition (default, switch instantly)                              |
| `fade`     | Cross fade                                                             |
| `slide`    | Slide horizontally                                                     |
| `convex`   | Slide at a convex angle                                                |
| `concave`  | Slide at a concave angle                                               |
| `zoom`     | Scale the incoming slide so it grows in from the center of the screen. |

::: footer
Learn more: [Slide Transitions](https://quarto.org/docs/presentations/revealjs/advanced.html#slide-transitions)
:::

## Tabsets {.smaller .scrollable transition="slide"}

::: panel-tabset
### Plot

```{r}
library(ggplot2)
ggplot(mtcars, aes(hp, mpg, color = am)) +
  geom_point() +
  geom_smooth(formula = y ~ x, method = "loess")
```

### Data

```{r}
knitr::kable(mtcars)
```
:::

::: footer
Learn more: [Tabsets](https://quarto.org/docs/presentations/revealjs/#tabsets)
:::

## Interactive Slides {.smaller transition="slide"}

Include Jupyter widgets and htmlwidgets in your presentations

```{r}
#| echo: false
#| fig-height: 5
library(leaflet)
leaflet() %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
```

::: footer
Learn more: [Jupyter widgets](https://quarto.org/docs/interactive/widgets/jupyter.html), [htmlwidgets](https://quarto.org/docs/interactive/widgets/htmlwidgets.html)
:::

## Interactive Slides {.smaller transition="slide"}

Turn presentations into applications with Observable and Shiny. Use component layout to position inputs and outputs.

```{r}
ojs_define(actors = data.frame(
  x = rnorm(100),
  y = rnorm(100)
))
```

```{ojs}
//| panel: sidebar
viewof talentWeight = Inputs.range([-2, 2], { value: 0.7, step: 0.01, label: "talent weight" })
viewof looksWeight = Inputs.range([-2, 2], { value: 0.7, step: 0.01, label: "looks weight" })
viewof minimum = Inputs.range([-2, 2], { value: 1, step: 0.01, label: "min fame" })
```

::: footer
Learn more: [Observable](https://quarto.org/docs/interactive/ojs/), [Shiny](https://quarto.org/docs/interactive/shiny/), [Component Layout](https://quarto.org/docs/interactive/layout.html)
:::

## Preview Links

Navigate to hyperlinks without disrupting the flow of your presentation.

Use the `preview-links` option to open links in an iframe on top of your slides. Try clicking the link below for a demonstration:

::: {style="text-align: center; margin-top: 1em"}
[Matplotlib: Visualization with Python](https://matplotlib.org/){preview-link="true" style="text-align: center"}
:::

::: footer
Learn more: [Preview Links](https://quarto.org/docs/presentations/revealjs/presenting.html#preview-links)
:::

## Themes

10 Built-in Themes (or [create your own](https://quarto.org/docs/presentations/revealjs/themes.html#creating-themes))

::: {layout-ncol="2"}
![](images/moon.png)

![](images/sky.png)
:::

::: footer
Learn more: [Themes](https://quarto.org/docs/presentations/revealjs/themes.html)
:::

## Easy Navigation

::: {style="margin-bottom: 0.9em;"}
Quickly jump to other parts of your presentation
:::

::: {layout="[1, 20]"}
![](images/presentation-menu.png){width="41"}

Toggle the slide menu with the menu button (bottom left of slide) to go to other slides and access presentation tools.
:::

You can also press `m` to toggle the menu open and closed.

::: footer
Learn more: [Navigation](https://quarto.org/docs/presentations/revealjs/presenting.html#navigation-menu)
:::

## Chalkboard {chalkboard-buttons="true"}

::: {style="margin-bottom: 0.9em;"}
Free form drawing and slide annotations
:::

::: {layout="[1, 20]"}
![](images/presentation-chalkboard.png){width="41"}

Use the chalkboard button at the bottom left of the slide to toggle the chalkboard.
:::

::: {layout="[1, 20]"}
![](images/presentation-notes-canvas.png){width="41"}

Use the notes canvas button at the bottom left of the slide to toggle drawing on top of the current slide.
:::

You can also press `b` to toggle the chalkboard or `c` to toggle the notes canvas.

::: footer
Learn more: [Chalkboard](https://quarto.org/docs/presentations/revealjs/presenting.html#chalkboard)
:::

## Point of View

Press `o` to toggle overview mode:

![](images/overview-mode.png){.border}

Hold down the `Alt` key (or `Ctrl` in Linux) and click on any element to zoom towards it---try it now on this slide.

::: footer
Learn more: [Overview Mode](https://quarto.org/docs/presentations/revealjs/presenting.html#overview-mode), [Slide Zoom](https://quarto.org/docs/presentations/revealjs/presenting.html#slide-zoom)
:::

## Speaker View

Press `s` (or use the presentation menu) to open speaker view

![](images/speaker-view.png){fig-align="center" style="border: 3px solid #dee2e6;" width="780"}

::: footer
Learn more: [Speaker View](https://quarto.org/docs/presentations/revealjs/presenting.html#speaker-view)
:::

## Authoring Tools {.smaller}

Live side-by-side preview for any notebook or text editor including Jupyter and VS Code

::: columns
::: {.column width="50%"}
![](images/jupyter-edit.png){.border .border-thick}
:::

::: {.column width="50%"}
![](images/jupyter-preview.png){.border .border-thick}
:::
:::

::: footer
Learn more: [Jupyter](https://quarto.org/docs/tools/jupyter-lab.html), [VS Code](https://quarto.org/docs/tools/vscode.html), [Text Editors](https://quarto.org/docs/tools/text-editors.html)
:::

## Authoring Tools {.smaller}

RStudio includes an integrated presentation preview pane

![](images/rstudio.png){.border width="900"}

::: footer
Learn more: [RStudio](https://quarto.org/docs/tools/rstudio.html)
:::

## And More...

-   [Touch](https://quarto.org/docs/presentations/revealjs/advanced.html#touch-navigation) optimized (presentations look great on mobile, swipe to navigate slides)
-   [Footer & Logo](https://quarto.org/docs/presentations/revealjs/#footer-logo) (optionally specify custom footer per-slide)
-   [Auto-Slide](https://quarto.org/docs/presentations/revealjs/presenting.html#auto-slide) (step through slides automatically, without any user input)
-   [Multiplex](https://quarto.org/docs/presentations/revealjs/presenting.html#multiplex) (allows your audience to follow the slides of the presentation you are controlling on their own phone, tablet or laptop).

::: footer
Learn more: [Quarto Presentations](https://quarto.org/docs/presentations/revealjs/)
:::